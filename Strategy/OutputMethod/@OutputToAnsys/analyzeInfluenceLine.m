function OutputMethod_clone = analyzeInfluenceLine(obj,num_GirderNodes,value_Force)
    arguments
        obj
        num_GirderNodes (1,:) {mustBeNumeric} = []
        value_Force (1,1) {mustBeNumeric} = 1e6
    end
    OutputMethod_clone = obj.clone();
    OutputMethod_clone.JobName = fullfile('InfluenceLine');
    OutputMethod_clone.MacFilePath = fullfile(OutputMethod_clone.WorkPath,'analyzeInfluenceLine.mac');
    OutputMethod_clone.ResultFilePath = fullfile(OutputMethod_clone.WorkPath,'Result_analyzeInfluenceLine.out');

    % 获取加劲梁上的所有Node
    if isempty(num_GirderNodes)
        Map_Line2Elem = OutputMethod_clone.Params.Map_MatlabLine2AnsysElem;
        girders = OutputMethod_clone.findStructureByClass('Girder');
        num_elems = [];
        for i=1:length(girders)
            girder = girders{i};
            line = girder.Line;
            num_lines = [line.Num];
            for j=1:length(num_lines)
                num_elems = [num_elems,Map_Line2Elem(num_lines(j))];
            end
        end
        nodes = OutputMethod_clone.OutputMethod.getNodeByNumElements(num_elems);
        num_GirderNodes = [nodes.sort('X').Num];
    end

    output_str = ['/solu',newline,...
                    sprintf('resume,%s,db',obj.JobName),newline,...
                    'antype,static',newline,...
                    'nlgeom,on',newline,...
                    'sstif,on',newline,...
                    'nsubst,1,0,0',newline,...
                    'outres,all,all',newline,newline,...
                    sprintf('count_nodes = %d',length(num_GirderNodes)),newline,...
                    OutputMethod_clone.outputArray(num_GirderNodes,'num_girder_nodes'),newline,...
                    '*do,i,1,count_nodes',newline,...
                    '    time,i',newline,...
                    '    *if,i,gt,1,then',newline,...
                    '        fdele,all,all',newline,...
                    '    *endif',newline,...
                    sprintf('    f,num_girder_nodes(i),FZ,-%e',abs(value_Force)),newline,...
                    '    solve',newline,...
                    '*enddo',newline,...
                    sprintf('save,%s,db',OutputMethod_clone.JobName)];
    OutputMethod_clone.outputAPDL(output_str,'analyzeInfluenceLine.mac','w')
    % 运行宏文件
    OutputMethod_clone.runMac("ComputingMode","Distributed")
end